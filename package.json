{
  "name": "neuralium-wallet",
  "version": "5.1.0",
  "description": "Neuralium wallet",
  "homepage": "https://www.neuralium.com",
  "author": {
    "name": "Neuralium inc.",
    "email": "info@neuralium.com"
  },
  "main": "main.js",
  "private": true,
  "scripts": {
    "sass": "node-sass src/styles.scss src/styles.css",
    "postinstall": "npm run postinstall:electron && electron-builder install-app-deps",
    "postinstall:web": "node postinstall-web",
    "postinstall:electron": "node postinstall",
    "ng": "ng",
    "start": "npm run start:testnet",
    "start:devnet": "npm run postinstall:electron && npm-run-all -p ng:serve:devnet electron:serve",
    "start:testnet": "npm run postinstall:electron && npm-run-all -p ng:serve:testnet electron:serve",
    "build": "npm run postinstall:electron && ng build",
    "build:devnet": "npm run build -- -c devnet",
    "build:testnet": "npm run build -- -c testnet",
    "build:mainnet": "npm run build -- -c mainnet",
    "ng:serve": "ng serve -c devnet",
    "ng:serve:devnet": "ng serve -c devnet",
    "ng:serve:testnet": "ng serve -c testnet",
    "ng:serve:mainnet": "ng serve -c mainnet",
    "ng:serve:web": "npm run postinstall:web && ng serve -o",
    "electron:serve-tsc": "tsc -p tsconfig-serve.json",
    "electron:serve": "wait-on http-get://localhost:4200/ && npm run electron:serve-tsc && electron . --serve",
    "electron:local": "npm run build:mainnet && electron .",
    "electron:linux": "npm run build:mainnet &&  npm run package:linux",
    "electron:windows": "npm run build:mainnet && npm run package:windows",
    "electron:mac": "npm run build:mainnet && npm run package:mac",
    "electron:linux:devnet": "npm run build:devnet && electron-builder build:devnet --linux",
    "electron:windows:devnet": "npm run build:devnet && electron-builder build:devnet --windows",
    "electron:linwin": "npm run build:mainnet && npm run package:linux && npm run package:windows",
    "package:linux": "electron-builder build:mainnet --linux",
    "package:windows": "electron-builder build:mainnet --windows",
    "package:mac": "electron-builder build:mainnet --mac",
    "package:linwin": "npm run package:linux && npm run package:windows",
    "test": "npm run postinstall:web && ng test",
    "e2e": "npm run postinstall:web && ng e2e",
    "version": "conventional-changelog -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md",
    "extract-translations-en": "ngx-translate-extract --input ./src --output ./src/assets/i18n/en.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-fr": "ngx-translate-extract --input ./src --output ./src/assets/i18n/fr.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-es": "ngx-translate-extract --input ./src --output ./src/assets/i18n/es.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-zh": "ngx-translate-extract --input ./src --output ./src/assets/i18n/zh.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-zh-TW": "ngx-translate-extract --input ./src --output ./src/assets/i18n/zh-TW.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-ar": "ngx-translate-extract --input ./src --output ./src/assets/i18n/ar.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-pt": "ngx-translate-extract --input ./src --output ./src/assets/i18n/pt.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-ru": "ngx-translate-extract --input ./src --output ./src/assets/i18n/ru.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-yo": "ngx-translate-extract --input ./src --output ./src/assets/i18n/yo.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-de": "ngx-translate-extract --input ./src --output ./src/assets/i18n/de.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-it": "ngx-translate-extract --input ./src --output ./src/assets/i18n/it.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-iw": "ngx-translate-extract --input ./src --output ./src/assets/i18n/iw.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-ko": "ngx-translate-extract --input ./src --output ./src/assets/i18n/ko.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-id": "ngx-translate-extract --input ./src --output ./src/assets/i18n/id.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-ur": "ngx-translate-extract --input ./src --output ./src/assets/i18n/ur.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-so": "ngx-translate-extract --input ./src --output ./src/assets/i18n/so.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-hi": "ngx-translate-extract --input ./src --output ./src/assets/i18n/hi.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-uk": "ngx-translate-extract --input ./src --output ./src/assets/i18n/uk.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-ja": "ngx-translate-extract --input ./src --output ./src/assets/i18n/ja.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-bn": "ngx-translate-extract --input ./src --output ./src/assets/i18n/bn.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-ha": "ngx-translate-extract --input ./src --output ./src/assets/i18n/ha.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-pa": "ngx-translate-extract --input ./src --output ./src/assets/i18n/pa.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-te": "ngx-translate-extract --input ./src --output ./src/assets/i18n/te.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-tr": "ngx-translate-extract --input ./src --output ./src/assets/i18n/tr.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-vi": "ngx-translate-extract --input ./src --output ./src/assets/i18n/vi.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-fa": "ngx-translate-extract --input ./src --output ./src/assets/i18n/fa.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-bg": "ngx-translate-extract --input ./src --output ./src/assets/i18n/bg.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-ta": "ngx-translate-extract --input ./src --output ./src/assets/i18n/ta.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-pl": "ngx-translate-extract --input ./src --output ./src/assets/i18n/pl.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-th": "ngx-translate-extract --input ./src --output ./src/assets/i18n/th.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "extract-translations-la": "ngx-translate-extract --input ./src --output ./src/assets/i18n/la.json --clean --sort --format namespaced-json --marker _ --match TRANSLATE",
    "translate": "npm run extract-translations-en && npm run extract-translations-fr && npm run extract-translations-es",
    "translate-auto": "npm run extract-translations-zh && npm run extract-translations-zh-TW && npm run extract-translations-ar && npm run extract-translations-pt && npm run extract-translations-ru && npm run extract-translations-yo && npm run extract-translations-de && npm run extract-translations-it && npm run extract-translations-iw && npm run extract-translations-ko && npm run extract-translations-id && npm run extract-translations-ur && npm run extract-translations-so && npm run extract-translations-uk && npm run extract-translations-ja && npm run extract-translations-hi && npm run extract-translations-bn && npm run extract-translations-ha && npm run extract-translations-pa && npm run extract-translations-te && npm run extract-translations-tr && npm run extract-translations-vi && npm run extract-translations-fa && npm run extract-translations-bg && npm run extract-translations-ta && npm run extract-translations-pl && npm run extract-translations-th && npm run extract-translations-la"
  },
  "dependencies": {
    "@angular-material-extensions/password-strength": "^6.0.0",
    "@electron/typescript-definitions": "^8.6.6",
    "@microsoft/signalr": "^3.1.0",
    "@types/electron-store": "^3.2.0",
    "@types/moment": "^2.13.0",
    "bootstrap": "^4.4.1",
    "electron-store": "^5.1.0",
    "font-awesome": "^4.7.0",
    "hammerjs": "^2.0.8",
    "jquery": "^3.4.1",
    "js-sha256": "^0.9.0",
    "moment": "^2.24.0",
    "ng2-tooltip-directive": "^2.8.17",
    "ngx-electron": "^2.2.0",
    "ngx-json-viewer": "^2.4.0",
    "ngx-mask": "^8.1.7",
    "popper.js": "^1.16.1",
    "primeflex": "^1.0.0",
    "primeicons": "^2.0.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.900.1",
    "@angular/animations": "^9.0.0",
    "@angular/cdk": "^9.0.0",
    "@angular/localize": "^9.0.0",
    "@angular/cli": "9.0.1",
    "@angular/common": "^9.0.0",
    "@angular/compiler": "^9.0.0",
    "@angular/compiler-cli": "^9.0.0",
    "@angular/core": "^9.0.0",
    "@angular/forms": "^9.0.0",
    "@angular/http": "7.2.16",
    "@angular/language-service": "^9.0.0",
    "@angular/material": "^9.0.0",
    "@angular/platform-browser": "^9.0.0",
    "@angular/platform-browser-dynamic": "^9.0.0",
    "@angular/router": "^9.0.0",
    "@biesbjerg/ngx-translate-extract": "^4.2.0",
    "@fortawesome/fontawesome-free": "^5.12.1",
    "@ng-bootstrap/ng-bootstrap": "^5.2.2",
    "@ngx-translate/core": "^12.0.0",
    "@ngx-translate/http-loader": "^4.0.0",
    "@types/fs-extra": "^8.0.1",
    "@types/jasmine": "3.5.3",
    "@types/jasminewd2": "2.0.8",
    "bootstrap": "^4.4.1",
    "codelyzer": "5.2.1",
    "conventional-changelog-cli": "2.0.31",
    "core-js": "^3.6.4",
    "electron": "^8.0.0",
    "electron-builder": "^22.3.2",
    "electron-reload": "^1.5.0",
    "fs-extra": "^8.1.0",
    "jasmine-core": "3.5.0",
    "jasmine-spec-reporter": "4.2.1",
    "karma": "4.4.1",
    "karma-chrome-launcher": "3.1.0",
    "karma-coverage-istanbul-reporter": "2.1.1",
    "karma-jasmine": "^3.1.0",
    "karma-jasmine-html-reporter": "1.5.2",
    "node-sass": "^4.13.1",
    "npm-run-all": "4.1.5",
    "protractor": "6.0.0",
    "rxjs": "^6.5.4",
    "ts-node": "8.6.2",
    "tslint": "6.0.0",
    "typescript": "3.7.5",
    "wait-on": "4.0.0",
    "webdriver-manager": "13.0.0",
    "zone.js": "0.10.2"
  },
  "engines": {
    "node": ">=10.9.0"
  },
  "resolutions": {
    "@types/node": "12.12.24",
    "comment": "https://github.com/electron/electron/issues/21612"
  }
}
